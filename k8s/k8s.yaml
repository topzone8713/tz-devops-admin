apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-admin
spec:
  selector:
    matchLabels:
      app: devops-admin
  replicas: 1
  template:
    metadata:
      labels:
        org: tz
        team: devops
        project: admin
        environment: ${STAGING}
        app: devops-admin
    spec:
      imagePullSecrets:
        - name: registry-creds
      containers:
      - name: devops-admin
        image: ${REPOSITORY_TAG}
        imagePullPolicy: Always
#        readinessProbe:
#          httpGet:
#            path: /health
#            port: 8000
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        envFrom:
        - configMapRef:
            name: devops-admin-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: devops-admin
spec:
  type: NodePort
  selector:
    app: devops-admin
  ports:
    - port: 80
      name: api-80
      targetPort: 8000
#    - port: 443
#      name: api-443
#      targetPort: 443

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: devops-admin-configmap
data:
  GIT_BRANCH: ${GIT_BRANCH}
  DB_HOSTNAME: host.docker.internal
  DB_R_HOSTNAME: host.docker.internal

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-admin
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:${AWS_REGION}:${ACCOUNT_ID}:certificate/${CERTIFICATE}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST, DELETE, PATCH, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Retry-After,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30,slow_start.duration_seconds=30,stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
#    alb.ingress.kubernetes.io/security-groups: ${SECURITY_GROUP}
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  rules:
  - host: admin.devops.${CLUSTER_NAME}.${DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: devops-admin
            port:
              number: 80
